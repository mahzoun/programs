(* Exercise 2*)

param n.


type key [bounded].
type keyseed [large, fixed].
type hasht [large, fixed].
type seed [large, fixed].
type hashkey [bounded].

proba POW.

expand ROM_hash(hashkey, seed, hasht, hash, hashoracle, qH).

expand OW_trapdoor_perm(keyseed, key, key, seed, pkgen, skgen, f, mf, POW).

expand Xor(hasht, xor, zero).

(* Queries *)
query secret b.


channel c, lR, cA, start, hstart, hret, dec_ch.


let LR(pk: key, hk: hashkey, b0: bool) =
	! i <= n
	in(lR, (m0: hasht, m1: hasht));
	let menc = if b0 then m0 else m1 in 
	new x: seed;
	let aa = f(pk, x) in
	let bb = xor(hash(hk, x), menc) in 
	out(lR, (aa, bb)).

	
process 
	in(hstart, ());
	new hk:hashkey;
	out(hret, ());
	hashoracle(hk)|
	in(start, ());
	new b: bool;
	new rk: keyseed;
	let pk = pkgen(rk) in
	let sk = skgen(rk) in
	out(c, pk);
	LR(pk, hk, b) 

